name: Secure Docker Publish to Docker Hub

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps: 
      # 0. Checkout
      - name: üîÑ Checkout repo
        uses: actions/checkout@v3
        id: checkout

      # 1. Setup Node.js
      - name: üì¶ Setup Node.js
        run: npm install
        id: setup-node

      # 2. Secrets Scanning
      - name: üîç Run Gitleaks (Secrets Scan)
        run: |
          gitleaks detect --source . --no-git -v --report-format json --report-path gitleaks-report.json || true
        id: gitleaks
        continue-on-error: true

      # 3. Static Code Analysis (SAST)
      - name: üõ°Ô∏è Run Semgrep (SAST)
        run: |
          semgrep --config p/ci --json --output=semgrep-report.json || true
        id: semgrep
        continue-on-error: true

      # 4. Dependency Security (SCA) - Snyk
      - name: üì¶üîí Run Snyk to check for vulnerabilities
        run: |
          snyk test --json > snyk-report.json || true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        id: snyk
        continue-on-error: true

      # 5. Set up Docker Buildx
      - name: üõ†Ô∏è Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        id: buildx

      # 6. Login to DockerHub
      - name: üîë Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        id: docker-login

      # 7. Build Docker Image (without pushing yet)
      - name: üê≥ Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          tags: mybyelias/log:latest
        continue-on-error: true
        id: docker-build

      # 8. Scan Docker Image (Trivy)
      - name: üîé Scan Docker image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "mybyelias/log:latest"
          severity: HIGH,CRITICAL
          ignore-unfixed: true
          format: json
          output: trivy-report.json
        continue-on-error: true
        id: trivy

      # 9. Push Docker Image
      - name: üöÄ Push Docker image
        if: success()
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: mybyelias/log:latest
        continue-on-error: true
        id: docker-push

      # 10. Deploy on remote server via SSH
      - name: üì° Deploy on remote server via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd /home/gns
            ./log.sh
        continue-on-error: true
        id: deploy

      # 11. Send Full CI/CD Report to Jira
      - name: üì§ Send full CI/CD report to Jira
        run: |
          summary="Full CI/CD report - $(date +'%Y-%m-%d')"

          # Gather outputs from JSON reports
          gitleaks_report=$(cat gitleaks-report.json || echo "{}")
          semgrep_report=$(cat semgrep-report.json || echo "{}")
          snyk_report=$(cat snyk-report.json || echo "{}")
          trivy_report=$(cat trivy-report.json || echo "{}")
          docker_build_report="${{ steps.docker-build.outcome }}"
          docker_push_report="${{ steps.docker-push.outcome }}"
          deploy_report="${{ steps.deploy.outcome }}"

          description="{
            \"type\": \"doc\",
            \"version\": 1,
            \"content\": [
              {\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"Checkout: ${{ steps.checkout.outcome }}\"}]},

              {\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"Gitleaks Report:\"}]},
              {\"type\":\"codeBlock\",\"attrs\":{\"language\":\"json\"},\"content\":[{\"type\":\"text\",\"text\":$(jq -Rs . <<< \"$gitleaks_report\")}]},

              {\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"Semgrep Report:\"}]},
              {\"type\":\"codeBlock\",\"attrs\":{\"language\":\"json\"},\"content\":[{\"type\":\"text\",\"text\":$(jq -Rs . <<< \"$semgrep_report\")}]},

              {\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"Snyk Report:\"}]},
              {\"type\":\"codeBlock\",\"attrs\":{\"language\":\"json\"},\"content\":[{\"type\":\"text\",\"text\":$(jq -Rs . <<< \"$snyk_report\")}]},

              {\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"Trivy Report:\"}]},
              {\"type\":\"codeBlock\",\"attrs\":{\"language\":\"json\"},\"content\":[{\"type\":\"text\",\"text\":$(jq -Rs . <<< \"$trivy_report\")}]},

              {\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"Docker Build: $docker_build_report\"}]},
              {\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"Docker Push: $docker_push_report\"}]},
              {\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"Deployment: $deploy_report\"}]}
            ]
          }"

          curl -X POST \
            -H "Authorization: Basic $JIRA_AUTH" \
            -H "Content-Type: application/json" \
            --data "{
              \"fields\": {
                \"project\": { \"key\": \"NJ\" },
                \"summary\": \"$summary\",
                \"description\": $description,
                \"issuetype\": { \"name\": \"Task\" }
              }
            }" \
            https://gnsus.atlassian.net/rest/api/3/issue
        env:
          JIRA_AUTH: ${{ secrets.JIRA_AUTH }}
