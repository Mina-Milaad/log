name: Secure Docker Publish to Docker Hub

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: 🔄 Checkout repo
        uses: actions/checkout@v3

      # 1. Secrets Scanning
      - name: 🔐 Run Gitleaks (Secrets Scan)
        uses: gitleaks/gitleaks-action@v2
        with:
          args: detect --source . --no-git -v

      # 2. Static Code Analysis (SAST)
      - name: 🛡️ Run Semgrep (SAST)
        uses: returntocorp/semgrep-action@v1
        with:
          config: "p/ci"

      # 3. Dependency Security (SCA) - Snyk
      - name: 🧩 Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      # 4. Set up Docker Buildx
      - name: 🐳 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 5. Login to DockerHub
      - name: 🔐 Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 6. Build Docker Image (without pushing yet)
      - name: 📦 Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          tags: mybyelias/log:latest

      - name: ⚙️ Set up Trivy
        uses: aquasecurity/setup-trivy@v1
        with:
          version: 0.65.0  
      
      
   # 7. Scan Docker Image (Trivy) - تعديل
      - name: 🔍 Scan Docker image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "mybyelias/log:latest"
          format: "json"
          output: "trivy-report.json"
          exit-code: "1"          # يفشل لو فيه CRITICAL فق
          vuln-type: "os,library"
          severity: "CRITICAL" 

      # 8. Push Docker Image (only if scans passed)
      - name: 📤 Push Docker image
        if: success()
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: mybyelias/log:latest

      # 9. Deploy on remote server via SSH
      - name: 🚀 Deploy on remote server via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd /home/gns
            ./log.sh
