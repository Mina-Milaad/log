name: Secure Docker Publish to Docker Hub

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # 0. Checkout
      - name: 🔄 Checkout repo
        uses: actions/checkout@v3
        id: checkout

      # 1. Setup Node.js
      - name: 📦 Setup Node.js
        run: npm install
        id: setup-node

      # 2. Secrets Scanning - Gitleaks
      - name: 🔐 Run Gitleaks (Secrets Scan)
        uses: gitleaks/gitleaks-action@v2
        with:
          args: detect --source . --no-git --report-format json --report-path gitleaks-report.json
        continue-on-error: true
        id: gitleaks

      # 3. Static Code Analysis - Semgrep
      - name: 🛡️ Run Semgrep (SAST)
        uses: returntocorp/semgrep-action@v1
        with:
          config: "p/ci"
          args: --json --output semgrep-report.json
        continue-on-error: true
        id: semgrep

      # 4. Dependency Security - Snyk
      - name: 🧩 Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        continue-on-error: true
        id: snyk
        run: snyk test --all-projects --json-file-output=snyk-report.json || true

      # 5. Setup Docker Buildx
      - name: 🐳 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        id: buildx

      # 6. Login to DockerHub
      - name: 🔐 Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        id: docker-login

      # 7. Build Docker Image
      - name: 📦 Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          tags: mybyelias/log:latest
          load: true
        continue-on-error: true
        id: docker-build
        run: docker build . -t mybyelias/log:latest > docker-build.log 2>&1 || true

      # 8. Scan Docker Image - Trivy
      - name: 🔍 Scan Docker image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "mybyelias/log:latest"
          severity: HIGH,CRITICAL
          ignore-unfixed: true
          format: json
          output: trivy-report.json
        continue-on-error: true
        id: trivy

      # 9. Push Docker Image
      - name: 📤 Push Docker image
        if: success()
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: mybyelias/log:latest
        continue-on-error: true
        id: docker-push

      # 10. Deploy on remote server via SSH
      - name: 🚀 Deploy on remote server via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd /home/gns
            ./log.sh > deploy.log 2>&1 || true
        continue-on-error: true
        id: deploy

      # 11. Send full CI/CD Report to Jira
      - name: 📤 Send full CI/CD report to Jira
        run: |
          summary="Full CI/CD report - $(date +'%Y-%m-%d')"

          # Gather outputs
          gitleaks_report=$(cat gitleaks-report.json || echo "{}")
          semgrep_report=$(cat semgrep-report.json || echo "{}")
          snyk_report=$(cat snyk-report.json || echo "{}")
          trivy_report=$(cat trivy-report.json || echo "{}")
          docker_build_report=$(cat docker-build.log || echo "No logs")
          deploy_report=$(cat deploy.log || echo "No logs")

          description="{
            \"type\": \"doc\",
            \"version\": 1,
            \"content\": [
              {\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"Checkout: ${{ steps.checkout.outcome }}\"}]},
              {\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"Gitleaks Scan: ${{ steps.gitleaks.outcome }}\"}]},
              {\"type\":\"codeBlock\",\"attrs\":{\"language\":\"json\"},\"content\":[{\"type\":\"text\",\"text\":$(jq -Rs . <<< \"$gitleaks_report\")}]},
              {\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"Semgrep Scan: ${{ steps.semgrep.outcome }}\"}]},
              {\"type\":\"codeBlock\",\"attrs\":{\"language\":\"json\"},\"content\":[{\"type\":\"text\",\"text\":$(jq -Rs . <<< \"$semgrep_report\")}]},
              {\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"Snyk Scan: ${{ steps.snyk.outcome }}\"}]},
              {\"type\":\"codeBlock\",\"attrs\":{\"language\":\"json\"},\"content\":[{\"type\":\"text\",\"text\":$(jq -Rs . <<< \"$snyk_report\")}]},
              {\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"Docker Build: ${{ steps.docker-build.outcome }}\"}]},
              {\"type\":\"codeBlock\",\"attrs\":{\"language\":\"text\"},\"content\":[{\"type\":\"text\",\"text\":$(jq -Rs . <<< \"$docker_build_report\")}]},
              {\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"Trivy Report: ${{ steps.trivy.outcome }}\"}]},
              {\"type\":\"codeBlock\",\"attrs\":{\"language\":\"json\"},\"content\":[{\"type\":\"text\",\"text\":$(jq -Rs . <<< \"$trivy_report\")}]},
              {\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"Docker Push: ${{ steps.docker-push.outcome }}\"}]},
              {\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"Deployment: ${{ steps.deploy.outcome }}\"}]},
              {\"type\":\"codeBlock\",\"attrs\":{\"language\":\"text\"},\"content\":[{\"type\":\"text\",\"text\":$(jq -Rs . <<< \"$deploy_report\")}]}
            ]
          }"

          curl -X POST \
            -H "Authorization: Basic $JIRA_AUTH" \
            -H "Content-Type: application/json" \
            --data "{
              \"fields\": {
                \"project\": { \"key\": \"NJ\" },
                \"summary\": \"$summary\",
                \"description\": $description,
                \"issuetype\": { \"name\": \"Task\" }
              }
            }" \
            https://gnsus.atlassian.net/rest/api/3/issue
        env:
          JIRA_AUTH: ${{ secrets.JIRA_AUTH }} 
