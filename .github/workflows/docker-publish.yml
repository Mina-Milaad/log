name: Secure Docker Publish to Docker Hub

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # 0. Checkout
      - name: 🔄 Checkout repo
        uses: actions/checkout@v3
        id: checkout

      # 1. Setup Node.js dependencies
      - name: 📦 Install Node.js dependencies
        run: npm install
        id: setup-node

      # 2. Secrets Scanning
      - name: 🔐 Run Gitleaks (Secrets Scan)
        uses: gitleaks/gitleaks-action@v2
        with:
          args: detect --source . --no-git -v
        continue-on-error: true
        id: gitleaks

      # 3. Static Code Analysis (SAST)
      - name: 🛡️ Run Semgrep (SAST)
        uses: returntocorp/semgrep-action@v1
        with:
          config: "p/ci"
        continue-on-error: true
        id: semgrep

      # 4. Dependency Security (SCA) - Snyk
      - name: 🧩 Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        continue-on-error: true
        id: snyk

      # 5. Set up Docker Buildx
      - name: 🐳 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        id: buildx

      # 6. Login to DockerHub
      - name: 🔐 Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        id: docker-login

      # 7. Build Docker Image
      - name: 📦 Build Docker image
        run: |
          docker build . -t mybyelias/log:latest > docker-build.log 2>&1 || true
        continue-on-error: true
        id: docker-build

      # 8. Scan Docker Image (Trivy)
      - name: 🔍 Scan Docker image with Trivy
        run: |
          trivy image --severity HIGH,CRITICAL --ignore-unfixed -f json -o trivy-report.json mybyelias/log:latest || true
        continue-on-error: true
        id: trivy

      # 9. Push Docker Image
      - name: 📤 Push Docker image
        run: |
          docker push mybyelias/log:latest > docker-push.log 2>&1 || true
        continue-on-error: true
        id: docker-push

      # 10. Deploy on remote server via SSH
      - name: 🚀 Deploy on remote server via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd /home/gns
            ./log.sh > deploy.log 2>&1 || true
        continue-on-error: true
        id: deploy

      # 11. Send Full CI/CD Report to Jira
      - name: 📤 Send full CI/CD report to Jira
        run: |
          summary="Full CI/CD report - $(date +'%Y-%m-%d')"

          gitleaks_report="${{ steps.gitleaks.outcome }}"
          semgrep_report=$(cat semgrep-report.log 2>/dev/null || echo "${{ steps.semgrep.outcome }}")
          snyk_report="${{ steps.snyk.outcome }}"
          trivy_report=$(cat trivy-report.json || echo "{}")
          docker_build_report=$(cat docker-build.log || echo "${{ steps.docker-build.outcome }}")
          docker_push_report=$(cat docker-push.log || echo "${{ steps.docker-push.outcome }}")
          deploy_report=$(cat deploy.log || echo "${{ steps.deploy.outcome }}")

          description="{
            \"type\": \"doc\",
            \"version\": 1,
            \"content\": [
              {\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"Checkout: ${{ steps.checkout.outcome }}\"}]},
              {\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"Gitleaks Scan: $gitleaks_report\"}]},
              {\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"Semgrep Scan: $semgrep_report\"}]},
              {\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"Snyk Scan: $snyk_report\"}]},
              {\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"Docker Build:\"}]},
              {\"type\":\"codeBlock\",\"attrs\":{\"language\":\"text\"},\"content\":[{\"type\":\"text\",\"text\":$docker_build_report}]},
              {\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"Trivy Report:\"}]},
              {\"type\":\"codeBlock\",\"attrs\":{\"language\":\"json\"},\"content\":[{\"type\":\"text\",\"text\":$(jq -Rs . <<< \"$trivy_report\")}]},
              {\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"Docker Push:\"}]},
              {\"type\":\"codeBlock\",\"attrs\":{\"language\":\"text\"},\"content\":[{\"type\":\"text\",\"text\":$docker_push_report}]},
              {\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"Deployment:\"}]},
              {\"type\":\"codeBlock\",\"attrs\":{\"language\":\"text\"},\"content\":[{\"type\":\"text\",\"text\":$deploy_report}]}
            ]
          }"

          curl -X POST \
            -H "Authorization: Basic $JIRA_AUTH" \
            -H "Content-Type: application/json" \
            --data "{
              \"fields\": {
                \"project\": { \"key\": \"NJ\" },
                \"summary\": \"$summary\",
                \"description\": $description,
                \"issuetype\": { \"name\": \"Task\" }
              }
            }" \
            https://gnsus.atlassian.net/rest/api/3/issue
        env:
          JIRA_AUTH: ${{ secrets.JIRA_AUTH }}
